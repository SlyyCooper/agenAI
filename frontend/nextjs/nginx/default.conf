map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 80;
    server_name orca-app-jfdlt.ondigitalocean.app;

    # SSL configuration
    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/live/orca-app-jfdlt.ondigitalocean.app/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/orca-app-jfdlt.ondigitalocean.app/privkey.pem;

    # Increased timeouts
    proxy_read_timeout 600s;
    proxy_connect_timeout 120s;
    proxy_send_timeout 600s;
    
    # WebSocket specific settings
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_buffering off;

    # Backend API endpoints
    location / {
        proxy_pass http://127.0.0.1:8000/;
    }

    # WebSocket proxy
    location /ws {
        proxy_pass http://127.0.0.1:8000/ws;
        proxy_cache_bypass $http_upgrade;
    }
}

# Frontend server block
server {
    listen 80;
    server_name agenai.app;

    # SSL configuration
    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/live/agenai.app/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/agenai.app/privkey.pem;

    # Frontend static files
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # Proxy all backend requests to DigitalOcean
    location /backend/ {
        proxy_pass https://orca-app-jfdlt.ondigitalocean.app/;
    }

    # WebSocket proxy to DigitalOcean
    location /ws {
        proxy_pass https://orca-app-jfdlt.ondigitalocean.app/ws;
        proxy_cache_bypass $http_upgrade;
    }
}

# Development server block
server {
    listen 3000;
    server_name localhost;

    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    location /backend/ {
        proxy_pass http://localhost:8000/;
    }

    location /ws {
        proxy_pass http://localhost:8000/ws;
        proxy_cache_bypass $http_upgrade;
    }
}