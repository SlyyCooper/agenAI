rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function hasAccess() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.has_access == true;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
      
      // Prevent deletion of required fields
      allow update: if isOwner(userId) &&
        (!request.resource.data.diff(resource.data).affectedKeys()
          .hasAny(['created_at', 'stripe_customer_id']));
    }

    // Processed events collection
    match /processed_events/{eventId} {
      allow read: if hasAccess();
      allow write: if false; // Only allow writes from backend
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 